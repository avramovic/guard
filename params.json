{
  "name": "Guard",
  "tagline": "Linux CLI application used to protect files and folders on server in real time.",
  "body": "# guard\r\nLinux CLI application used to protect files and folders on server in real time.\r\n\r\n## About\r\n\r\nGuard is a Linux CLI application which relies on inotify-tools to watch multiple folders (usually containing web sites). Whenever a file is created, modified or deleted within a watched folder(s), the action will be reversed and event will be logged. Then you can list, allow or forget (remove) blocked events.\r\n\r\nIt can also send e-mail notification about modified files.\r\n\r\n## Requirements\r\n\r\n* PHP 5.5.9 or greater (PHP 7 highly recommended)\r\n* [inotify-tools](https://github.com/rvoicilas/inotify-tools/wiki)\r\n\r\nIf you don't have inotify-tools installed the app will fail miserably. Make sure you [have it installed](https://github.com/rvoicilas/inotify-tools/wiki#getting) before continuing!!!\r\n\r\n## Installation\r\n\r\nInstallation is very easy, you can choose to have it installed via `curl` or `wget`.\r\n\r\nFor cURL, type this into your command line:\r\n\r\n`curl -LSs http://avramovic.github.io/guard/downloads/installer.php | php`\r\n\r\nAlternatively, you can try with wget:\r\n\r\n`wget http://avramovic.github.io/guard/downloads/installer.php; php installer.php; rm installer.php`\r\n\r\nThe installer will check your PHP configuration and will let you know if everything is okay. Once done, you can check installed version with:\r\n\r\n`php guard.phar --version`\r\n\r\n### Global installation\r\n\r\nTo install Guard globally, simply move it to any folder which is in your PATH:\r\n\r\n`mv guard.phar /usr/local/bin/guard`\r\n\r\n> **Note**: If the above fails due to permissions, you may need to run it again with sudo. (`sudo !!`)  \r\n> **Note**: For information on changing your PATH, please read the [Wikipedia article](https://en.wikipedia.org/wiki/PATH_(variable)) and/or use Google.\r\n\r\nFrom now on, you should be able to call Guard with `guard` command only:\r\n\r\n`guard --version`\r\n\r\nIf it works, you can substitute `php guard.phar` with `guard` in all following commands.\r\n\r\n## Quickstart\r\n\r\nLet's say your site *example.com* is located in `/home/example/public_html` and you want to protect it. First, let's add that path to the watch list:\r\n\r\n`php guard.phar site:add example.com --path=/home/example/public_html`\r\n\r\nIf it says *Site example.com added!* you're ready to go. \r\n\r\n> **Note**: By default, Guard is watching for changes only on the following file types: `*.php;*.htm*;*.js;*.css;*.sql`. You can use `--types=TYPES` to specify your own file types to watch. Use `*` to watch them all (NOT recommended)   \r\n\r\nNow, start the watcher and that's it:\r\n\r\n`php guard.phar start &`\r\n\r\n> **Note**: Because `start` is a continious (never-ending) command, we're adding `&` at the end to run it in the background. \r\n> **Note**: To see all available commands, use `php guard.phar`   \r\n> **Note**: To get help about individual command, use `php guard.phar help COMMAND`\r\n\r\n## E-mail notifications\r\n\r\n@todo\r\n\r\n## Commands\r\n\r\n### Site commands\r\n\r\n#### site:add\r\n\r\n#### site:backup\r\n\r\n#### site:list\r\n\r\n#### site:remove\r\n\r\n#### site:set\r\n\r\n### Event commands\r\n\r\n#### event:list\r\n\r\n#### event:diff\r\n\r\n#### event:allow\r\n\r\n#### event:remove\r\n\r\n### Email commands\r\n\r\n#### email:show\r\n\r\n#### email:set\r\n\r\n#### email:test\r\n\r\n#### email:notify\r\n\r\n### Service commands\r\n\r\n#### status\r\n\r\n#### start\r\n\r\n#### stop\r\n\r\n#### update\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}