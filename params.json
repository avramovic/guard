{
  "name": "Guard",
  "tagline": "Linux CLI application used to protect files and folders on server in real time.",
  "body": "# About\r\n\r\nGuard is a Linux CLI application which relies on inotify-tools to watch multiple folders (usually containing web sites). Whenever a file is created, modified or deleted within a watched folder(s), the action will be reversed and event will be logged. Then you can list, allow or forget (remove) blocked events.\r\n\r\nIt can also send e-mail notification about modified files.\r\n\r\n# Requirements\r\n\r\n* PHP 5.5.9 or greater (PHP 7 highly recommended)\r\n* [inotify-tools](https://github.com/rvoicilas/inotify-tools/wiki)\r\n\r\nIf you don't have inotify-tools installed the app will fail miserably. Make sure you [have it installed](https://github.com/rvoicilas/inotify-tools/wiki#getting) before continuing!!!\r\n\r\n# Installation\r\n\r\nInstallation is very easy, you can choose to have it installed via curl or wget.\r\n\r\nFor cURL, type this into your command line:\r\n\r\n    curl -LSs http://avramovic.github.io/guard/downloads/installer.php | php\r\n\r\nAlternatively, you can try with wget:\r\n\r\n    wget -q -O - \"$@\" http://avramovic.github.io/guard/downloads/installer.php | php\r\n\r\nThe installer will check your PHP configuration and will let you know if everything is okay. Once done, you can check installed version with:\r\n\r\n    php guard.phar --version\r\n\r\n## Global installation\r\n\r\nTo install Guard globally, simply move it to any folder which is in your PATH:\r\n\r\n    mv guard.phar /usr/local/bin/guard\r\n\r\n> **Note**: If the above fails due to permissions, you may need to run it again with sudo. (sudo !!)   \r\n> **Note**: For information on changing your PATH, please read the [Wikipedia article](https://en.wikipedia.org/wiki/PATH_(variable)) and/or use Google.\r\n\r\nFrom now on, you should be able to call Guard with guard command only:\r\n\r\n    guard --version\r\n\r\nIf it works, you can substitute php guard.phar with guard in all following commands.\r\n\r\n# Quickstart\r\n\r\nLet's say your site *example.com* is located in /home/example/public_html and you want to protect it. First, let's add that path to the watch list:\r\n\r\n    php guard.phar site:add example.com --path=/home/example/public_html\r\n\r\nIf it says *Site example.com added!* you're ready to go. \r\n\r\n> **Note**: By default, Guard is watching for changes only on the following file types: *.php;*.htm*;*.js;*.css;*.sql. You can use --types=TYPES to specify your own file types to watch. Use * to watch them all (NOT recommended)   \r\n\r\nNow, start the watcher and that's it:\r\n\r\n    php guard.phar start &\r\n\r\n> **Note**: Because start is a continious (never-ending) command, we're adding & at the end to run it in the background.\r\n\r\n# Commands\r\n\r\nGuard offers variety of commands to make your life easier. Let's review them all!\r\n\r\n> **Note**: To see all available commands, use php guard.phar   \r\n> **Note**: To get help about individual command, use php guard.phar help COMMAND\r\n\r\n## Site commands\r\n\r\nThese commands are used to work with your site(s).\r\n\r\n### site:add\r\n\r\nThis command is used to add site to the watched list. All files from the supplied path will be backed up.\r\n\r\n    Usage:\r\n      site:add [options] [--] <name>\r\n    \r\n    Arguments:\r\n      name                     Name of the site. Usually the domain name\r\n    \r\n    Options:\r\n      -p, --path=PATH          Path to guard [default: \".\"]\r\n      -t, --types=TYPES        File extensions to protect [default: \"*.php;*.htm*;*.js;*.css;*.sql\"]\r\n      -e, --email=EMAIL        E-mail\r\n      -x, --excludes=EXCLUDES  Paths to exclude (multiple values allowed)\r\n\r\n> **Note**: Name can be any valid folder name but to make everything easier you should always use your site domain name here.   \r\n> **Note**: You must restart (stop/start) Guard after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nProtect only html files in the current directory:\r\n\r\n    php guard.phar site:add example.com --types=*.html\r\n\r\nProtect default files in the custom directory and set e-mail for notifications:\r\n\r\n    php guard.phar site:add example.com --path=/home/example/public_html --email=you@example.com\r\n\r\n### site:backup\r\n\r\nThis command is used to backup all files from site's path.\r\n\r\n#### Example(s)\r\n\r\nRefresh backup of the site *example.com*:\r\n\r\n    php guard.phar site:backup example.com\r\n\r\n### site:list\r\n\r\nThis command is used to show existing protected sites.\r\n\r\n#### Example(s)\r\n\r\nList all guarded sites:\r\n\r\n    php guard.phar site:list\r\n\r\n### site:remove\r\n\r\nThis command is used to remove site from being protected.\r\n\r\n> **Note**: You must restart (stop/start) Guard after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nRemove site *example.com* from being protected:\r\n\r\n    php guard.phar site:remove example.com\r\n\r\n### site:set\r\n\r\nThis command is used to set individual options for one site.\r\n\r\n    Usage:\r\n       site:set <name> <variable> <value> (<value>)...\r\n    \r\n     Arguments:\r\n       name                  Site name\r\n       variable              Variable name to set (can be: name, path, email, types or excludes)\r\n       value                 Variable value (or values for excludes, separated with space) to set\r\n    \r\n> **Note**: You must restart Guard (stop/start) after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nChange name of the site:\r\n\r\n    php guard.phar site:set example.com name othername.org\r\n\r\nSet/change email for notifications about this site:\r\n\r\n    php guard.phar site:set example.com email you@othername.org\r\n\r\nSet new excludes for the site (removing old excludes):\r\n\r\n    php guard.phar site:set example.com excludes /home/example/public_html/excluded ./public_html/uploads\r\n\r\n> **Note**: Setting excludes using this method will **remove** existing excludes. See below for alternatives.\r\n\r\n## Exclude commands\r\n\r\nThese commands are used to work with your sites' excludes.\r\n\r\n### exclude:add\r\n\r\nAdd folder to site excludes.\r\n\r\n> **Note**: You must restart (stop/start) Guard after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nAdd folder to site excludes:\r\n\r\n    php guard.phar exclude:add example.com /path/to/excluded/folder\r\n\r\n### exclude:remove\r\n\r\nRemove folder to site excludes.\r\n\r\n> **Note**: You must restart (stop/start) Guard after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nRemove folder to site excludes.\r\n\r\n    php guard.phar exclude:remove example.com /path/to/excluded/folder\r\n\r\n## Event commands\r\n\r\nThese commands are used to work with blocked events.\r\n\r\n### event:list\r\n\r\nList all blocked events.\r\n\r\n#### Example(s)\r\n\r\nRemove folder to site excludes:\r\n\r\n    php guard.phar event:list\r\n\r\n### event:diff\r\n\r\nShow a diff between original file and the blocked action.\r\n\r\n#### Example(s)\r\n\r\nShow a diff between original file and the blocked action with number 2:\r\n\r\n    php guard.phar event:diff 2\r\n\r\n### event:allow\r\n\r\nAllow blocked event to occur.\r\n\r\n#### Example(s)\r\n\r\nAllow blocked event to occur with number 2:\r\n\r\n    php guard.phar event:allow 2\r\n\r\nAllow all blocked events to occur.\r\n\r\n    php guard.phar event:allow all\r\n\r\n> **Note**: Be very careful when allowing ALL events. Study all the events with event:list and remove suspicious events first!\r\n\r\n### event:remove\r\n\r\nForget (remove) blocked event.\r\n\r\n#### Example(s)\r\n\r\nRemove blocked event to occur with number 3:\r\n\r\n    php guard.phar event:remove 3\r\n\r\nRemove all blocked events:\r\n\r\n    php guard.phar event:remove all\r\n\r\n## Email commands\r\n\r\nOne neat feature of Guard is to send you email notifications when events are blocked. It can send mail using three different transports:\r\n\r\n* mail - Use PHP's mail() function to send emails. This is the default transport.\r\n* sendmail - Use sendmail to send emails. You'll need to have sendmail installed on your server.\r\n* smtp - Use SMTP server to send emails. It supports no encryption, ssl and tls encryption. This is preferred transport.\r\n\r\nYou should set up a cron job to call email:notify at regular intervals to notify you about new changes on site files. See examples below.\r\n\r\n### email:show\r\n\r\nShow current email configuration.\r\n\r\n#### Example(s)\r\n\r\nShow current email configuration:\r\n\r\n    php guard.phar email:show\r\n\r\n### email:set\r\n\r\nSet email configuration variable.\r\n\r\n    Usage:\r\n       email:set <variable> <value> (<value>)...\r\n    \r\n     Arguments:\r\n       variable              Variable name to set (can be: recipient, transport, sendmail, smtp_host, smtp_port, smtp_user or smtp_pass)\r\n       value                 Variable value to set\r\n\r\n> **Note**: You must restart (stop/start) Guard after using this command for the changes to take effect.\r\n\r\n#### Example(s)\r\n\r\nChange email transport to sendmail:\r\n\r\n    php guard.phar email:set transport sendmail\r\n\r\nSet sendmail command path:\r\n\r\n    php guard.phar email:set sendmail \"/usr/bin/sendmail -bs\"\r\n\r\nSet default recipient(s) for all e-mails:\r\n\r\n    php guard.phar email:set address you@example.com someoneelse@gmail.com\r\n\r\nChange email transport to SMTP:\r\n\r\n    php guard.phar email:set transport smtp\r\n\r\nSet up SMTP:\r\n\r\n    php guard.phar email:set smtp_host mail.example.com\r\n    php guard.phar email:set smtp_port 465\r\n    php guard.phar email:set smtp_user example\r\n    php guard.phar email:set smtp_pass your-password\r\n    php guard.phar email:set smtp_encrypt tls\r\n\r\n### email:test\r\n\r\nSend a test email to the default recipient(s) or custom email address.\r\n\r\n#### Examples\r\n\r\nSend a test email to the default recipient(s):\r\n\r\n    php guard.phar email:test\r\n\r\nSend a test email to the custom email address:\r\n\r\n    php guard.phar email:test someoneelse@example.com\r\n\r\n### email:notify\r\n\r\nSend email notifications about new blocked file events.\r\n\r\n> **Note**: When sending these emails FROM email address will be set to guard-notifications@YOUR-SITE-NAME, if YOUR-SITE-NAME is a valid domain name. Otherwise, it will be the same address as the site's email address (so it'll look like you're sending an email to yourself).\r\n\r\n#### Example(s)\r\n\r\nSet up a cron job to send you email notifications every 5 minutes (if any new blocked events occur since last notification):\r\n\r\n    */5 * * * * php /full/path/to/guard.phar email:notify >/dev/null 2>&1\r\n\r\n## Service commands\r\n\r\nThese are service commands used to start/stop and update Guard.\r\n\r\n### status\r\n\r\nShows if Guard is currently running:\r\n\r\n    php guard.phar status\r\n\r\n### start\r\n\r\nStart Guard if not running:\r\n\r\n    php guard.phar start\r\n\r\n### stop\r\n\r\nStop Guard if running:\r\n\r\n    php guard.phar stop\r\n\r\n### update\r\n\r\nUpdate Guard to the latest version:\r\n\r\n    php guard.phar update\r\n\r\nRollback Guard to the previous version:\r\n\r\n    php guard.phar update --rollback\r\n\r\n> **Note**: If you have Guard installed globally, you may need to run this command with sudo!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}